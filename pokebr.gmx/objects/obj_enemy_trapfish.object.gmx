<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALS
action = 0; //What's the current move?
timer = 30 //Like, Alarms, but can be called on Step events easier

sprite_index = spr_test_trapfish_intro

z = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEPTH &amp; TIMER
depth = -y //Avoids the transparent square over the sprite

if timer &gt; 0
    timer -= 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ACTIONS
if timer = 0 //Don't forget this part needs to go from hihest to lowest
    {
    if action = 3 {action = 4; timer = -1}
    if action = 1 {action = 2; timer = -1}
    if action = 0 {action = 1; timer = 120; sprite_index = spr_test_trapfish_sub}
    }

//[0] Entry standby

//[1] Post-entry idle

//[2] Approaches player
    if action = 2
        {
        if obj_char.x &gt; x //Moves right
            x += 2;
        if obj_char.x &lt; x //Moves left
            x -= 2;           
        y += 2;
        z -= 0.1;
        }
        
//[3] Short idle
if action = 2
    if y &gt;= room_height*0.75
        {
        timer = 20
        action = 3
        }     
        
//[4] Charges towards player
if action = 4
    {
    y += 8
    }    
        
//[5] Returns to start if missed player
if y &gt; room_height
    {
    action = 5
    x = irandom_range(0+48,room_width-48)
    y = room_height/2
    z = -96
    }
if action = 5
    {
    if z != 0
        z += 1
    else
        {
        action = 1
        timer = 60
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW

draw_set_color(c_black) //Shadow color
d3d_draw_floor(x-48,y-96,z+1,x+48,y,z+1,sprite_get_texture(sprite_index,image_index),1,1)

draw_set_color(c_white) //Normal sprite
d3d_draw_wall(x-48,y,z+96,x+48,y,z,sprite_get_texture(sprite_index,image_index),1,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
