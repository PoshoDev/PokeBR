<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cacnea</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum actions
{
    idle,
    walk
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(irandom_range(0, 2))
{
    case 0:
        pokemon = "cacnea";
    break;
    
    case 1:
        pokemon = "kricketot";
    break;
    
    case 2:
        pokemon = "bidoof";
    break;
}

pow = 16;

spr1 = sprite_to_texture(asset_get_index(pokemon));
spr2 = sprite_to_texture(asset_get_index(pokemon+"_back"));

h_dir = -1;
v_dir = 1;

alarm[0] = 15;
action = actions.idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;

action = irandom_range(0, 1);

switch(action)
{
    case actions.idle:
        alarm[0] = irandom_range(30, 60);
    break;
    
    case actions.walk:
        target_x = irandom_range(16, 2000);
        target_y = irandom_range(16, 2000);
        
        if (target_x &lt; x)
            h_dir = -1;
        else
            h_dir = 1;
            
        if (target_y &lt; y)
            v_dir = -1;
        else
            v_dir = 1;
        
        alarm[0] = irandom_range(30, 60);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(action)
{
    case actions.idle:
    break;
    
    case actions.walk:
        move_towards_point(target_x, target_y, 5);
        
        if (distance_to_point(target_x, target_y) &lt; 16)
        {
            alarm[0] = 1;
            speed = 0;
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (obj_cam.y &lt; y)
{
    if (v_dir == 1)
        sprite_index = spr2;
    else
        sprite_index = spr1;
        
    h_vis = h_dir;   
}
else
{
    if (v_dir == 1)
        sprite_index = spr1;
    else
        sprite_index = spr2;   
        
    h_vis = h_dir*(-1);
}*/

if (v_dir == 1)
{
    sprite_index = spr1;
    
    if (h_dir == 1)
        h_vis = -1;
    else
        h_vis = 1; 
}
else
    sprite_index = spr2;


d3d_draw_wall(x-(pow/2*h_vis), y, 0, x+(pow/2*h_vis), y, pow, sprite_get_texture(sprite_index, image_index), 1, 1);

draw_set_color(c_black)
draw_ellipse(-(40/2), -(40/4), 40/2, 40/4, false)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*target_x = irandom_range(16, 500);
        target_y = irandom_range(16, 500);
        
        if (target_x &lt; x)
            h_dir = -1;
        else
            h_dir = 1;
            
        if (target_y &lt; y)
            v_dir = -1;
        else
            v_dir = 1;
        
        alarm[0] = irandom_range(0, 60);*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
